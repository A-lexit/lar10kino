<?php

namespace App\Http\Requests;

use App\Rules\Uppercase;
use Illuminate\Foundation\Http\FormRequest;
use Illuminate\Support\Facades\Validator;


class NameRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     */
    public function authorize(): bool
    {
        return true;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array<string, \Illuminate\Contracts\Validation\ValidationRule|array<mixed>|string>
     */
    public function rules(): array
    {

//Не проходять валідаціюииии тттт, уууу ЕЕЕЕ, кккккУУУУУУ, ААААвввв ыыыыыыы,
//Проходять валідацію: Фввввв Кааааа   ---    ФФФФ КККК, кккккУУУУУУ ВВВВВ, ФвыаыА аааааа, ППППаааа авафаы, вафывфы Авыаавыв, аывфаыф ПАРАРВА
        return [
            //
            /*'name' => 'required|string|min:3|max:30|unique:actors|regex:/^[a-яА-Я\-\s]+$/',*/
           /* 'name' => 'regex:/^[a-яА-Я]+[\-\s][a-яА-Я]+$/',*/
            /*'name' => 'required|string|min:3|max:30|unique:actors|regex:/^([А-Я]{1}+[a-я]{1,255})+[\-\s][А-Я][a-я]+$/',*/
            /*'name' => 'regex:/^([А-Я]{1}+[a-я]{1,255})+[\-\s][А-Я][a-я]+$/',*/
            /*'name' => 'regex:/^([А-ЯЁ]{1}[а-яё]{1,255})*$/u',*/
            /*'name' => 'regex:/^([А-ЯЁ]{1}[а-яё]{1,255})*$/u' */     //ОК  Олекса (ОлЕкса пропускає)
            /*'name' => 'regex:/^([А-ЯЁ]{1}[а-яё]{1,255})$/u'*/      //ОК  Олекса (ОлЕкса НЕ пропускає)
            /*'name' => ['regex:/^([А-ЯЁ]{1}[а-яё]{1,255})+[\-\s]([А-ЯЁ]{1}[а-яё]{1,255})*$/u']*/  // Олекса Олекс (ОлЕкса пропускає)
            /*'name' => ['regex:/^(([А-ЯЁ]{1}[а-яё]{1,255})|([А-ЯЁ]{1}[а-яё]{1,255})+[\-\s]([А-ЯЁ]{1}[а-яё]{1,255}))*$/u']*/  //Олекса або Олекса Олекс (ОлЕкса пропускає)
            /*'name' => ['regex:/^([А-ЯЁ]{1}[а-яё]{1,255})+[\-\s]([А-ЯЁ]{1}[а-яё]{1,255})+[\-\s]([А-ЯЁ]{1}[а-яё]{1,255})*$/u']*/  // Олекса Олекс Олексв (ОлЕкса пропускає)
            /*'name' => ['regex:/^(([А-ЯЁ]{1}[а-яё]{1,255})|([А-ЯЁ]{1}[а-яё]{1,255})+[\-\s]([А-ЯЁ]{1}[а-яё]{1,255})|([А-ЯЁ]{1}[а-яё]{1,255})+[\-\s]([А-ЯЁ]{1}[а-яё]{1,255})+[\-\s]([А-ЯЁ]{1}[а-яё]{1,255}))$/u']*/  //Олекса або Олекса Олекс або Олекса Олексав Олекс (ОлЕкса НЕпропускає (*видалено)S)
            /*'name' => ['required','string', 'min:3', 'max:30', 'regex:/^(([А-ЯЁ]{1}[а-яё]{1,255})|([А-ЯЁ]{1}[а-яё]{1,255})+[\-\s]([А-ЯЁ]{1}[а-яё]{1,255})|([А-ЯЁ]{1}[а-яё]{1,255})+[\-\s]([А-ЯЁ]{1}[а-яё]{1,255})+[\-\s]([А-ЯЁ]{1}[а-яё]{1,255})|([А-ЯЁ]{1}[а-яё]{1,255})+[\-\s]([А-ЯЁ]{1}[а-яё]{1,255})+[\-\s]([А-ЯЁ]{1}[а-яё]{1,255})+[\-\s])([А-ЯЁ]{1}[а-яё]{1,255})$/u']  //Олекса або Олекса Олекс або Олекса Олексав Олекс Олекск або Олекса Олексав Олекс*/


            /*'name' => ['required','string', 'min:3', 'max:60', 'regex:/^[А-ЯЁІЇҐа-яёіїґ\-\.\`\s]*$/u']*/ //, unique  //Олекса або Олекса Олекс або Олекса Олексав Олекс Олекск або Олекса Олексав Олекс
              'name' => ['required','string', 'min:3', 'max:60']



            /*'name' => ['regex:/^([А-ЯЁ]{1}[а-яё]{1,255})|([А-ЯЁ]{1}[а-яё]{1,255})+[\-\s]([А-ЯЁ]{1}[а-яё]{1,255})|([А-ЯЁ]{1}[а-яё]{1,255})+[\-\s]([А-ЯЁ]{1}[а-яё]{1,255})+[\-\s]([А-ЯЁ]{1}[а-яё]{1,255})$/u']*/  // Олекса Олекс




            /*'name' => 'required|string|min:3|max:30|unique:actors|regex:/^([А-ЯЁ]{1}[а-яё]{1,255})|([A-Z]{1}[a-z]{1,255})$/',*/
            /*'name' => 'required|string|min:3|max:30|unique:actors|regex:/^(?=[А-Я])[a-я]+[\-\s][А-Я][a-я]+$/',*/



        ];
    }
}
